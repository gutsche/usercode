process P = 
{

  service = MessageLogger
  {
    # MessageLogger configuration
    untracked vstring destinations =
    {
      "cout"
    }

    untracked vstring categories =
    {
      "FwkJob", "FwkReport"
    }

    untracked PSet cout =  
    {
      untracked string threshold = "INFO"
      untracked PSet default = 
      {
        untracked int32 limit = 100000000
      }
      untracked PSet FwkJob =
      {
        untracked int32 limit = 0 
      }
      untracked PSet FwkReport = 
      {
        untracked int32 reportEvery = 1 
      }
    }

    untracked vstring fwkJobReports = 
    {
      "CONDOR_FRAMEWORKJOBREPORT"
    }
  
    untracked PSet FrameworkJobReport = 
    {
      untracked PSet default = 
      { 
        untracked int32 limit = 0 
      }
      untracked PSet FwkJob  = 
      { 
        untracked int32 limit = 10000000 
      }
    }
  }

  # input
  source = PoolSource 
  {
untracked vstring fileNames = {
 '/store/unmerged/RelVal/2006/8/6/RelVal090pre3BJets50-120/GEN-SIM-DIGI-RECO/0000/DC921504-7A25-DB11-806E-003048754E55.root',
 '/store/unmerged/RelVal/2006/8/6/RelVal090pre3BJets50-120/GEN-SIM-DIGI-RECO/0000/5C066E6C-7F25-DB11-A3C7-003048767ED1.root',
 '/store/unmerged/RelVal/2006/8/6/RelVal090pre3BJets50-120/GEN-SIM-DIGI-RECO/0000/D471AA6F-7F25-DB11-9FE5-003048767C75.root',
 '/store/unmerged/RelVal/2006/8/6/RelVal090pre3BJets50-120/GEN-SIM-DIGI-RECO/0000/569CDC77-7F25-DB11-8F53-00304875ABE9.root',
 '/store/unmerged/RelVal/2006/8/6/RelVal090pre3BJets50-120/GEN-SIM-DIGI-RECO/0000/B8BB8323-7E25-DB11-903C-003048754D07.root'
}
    untracked int32 maxEvents = CONDOR_MAXEVENTS
    untracked uint32 skipEvents = CONDOR_SKIPEVENTS
  }
  # timing service
  service = Timing {}

  module myTimer = Timer
  {
    // whether to include timing info about Timer itself
    untracked bool includeSelf = false		
  }
#  include "HLTrigger/Timer/data/timer.cfi"

  # memory checking service
  service = SimpleMemoryCheck 
  {
    untracked int32 ignoreTotal = 1 # default is one
  }

  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
  include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"
  include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
  include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"

  sequence pixeltrackerlocalreco = {siPixelClusters, siPixelRecHits}
  sequence striptrackerlocalreco = {siStripClusters, siStripMatchedRecHits}

  sequence trackerlocalreco =  {pixeltrackerlocalreco, striptrackerlocalreco}

  # GlobalPixelSeedGenerator
  include "RecoTracker/TkSeedGenerator/data/GlobalMixedSeeds.cff"

  # Ckf
  include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"

  # Final Fit
  include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"

  # RoadSearchSeedFinder
  include "RecoTracker/RoadSearchSeedFinder/data/RoadSearchSeeds.cff"

  # RoadSearchCloudMaker
  include "RecoTracker/RoadSearchCloudMaker/data/RawRoadSearchClouds.cff"

  # RoadSearchCloudMaker
  include "RecoTracker/RoadSearchCloudCleaner/data/CleanRoadSearchClouds.cff"

  # RoadSearchTrackCandidateMaker
  include "RecoTracker/RoadSearchTrackCandidateMaker/data/RoadSearchTrackCandidates.cff"

  # RS track fit with material 
  include "RecoTracker/TrackProducer/data/RSFinalFitWithMaterial.cff"

  sequence ckftracks = {globalMixedSeeds, ckfTrackCandidates, ctfWithMaterialTracks}
  sequence rstracks  = {roadSearchSeeds, rawRoadSearchClouds, cleanRoadSearchClouds, rsTrackCandidates, rsWithMaterialTracks}

  module RECO = PoolOutputModule 
  {
    untracked string fileName = 'CONDOR_OUTPUTFILENAME'
  } 

  path p1 = 
  {  
    trackerlocalreco,
    ckftracks,
    rstracks
  }

  endpath outpath = 
  { 
    myTimer,
    RECO
  }	
}
